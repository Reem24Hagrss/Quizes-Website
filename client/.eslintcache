[{"/home/reem/Documents/QuizesWebsite/backend/client/src/index.js":"1","/home/reem/Documents/QuizesWebsite/backend/client/src/App.js":"2","/home/reem/Documents/QuizesWebsite/backend/client/src/reportWebVitals.js":"3","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/index.jsx":"4","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Auth/index.jsx":"5","/home/reem/Documents/QuizesWebsite/backend/client/src/components/User/index.jsx":"6","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/users.jsx":"7","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/tests.jsx":"8","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/Questions.jsx":"9","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Auth/TeacherLogin.jsx":"10","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Auth/StudentLogin.jsx":"11","/home/reem/Documents/QuizesWebsite/backend/client/src/components/User/NewTest.jsx":"12","/home/reem/Documents/QuizesWebsite/backend/client/src/components/User/Previous.jsx":"13","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/Modals.jsx":"14","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/TestQuestions.jsx":"15","/home/reem/Documents/QuizesWebsite/backend/client/src/components/User/AnswerModal.jsx":"16"},{"size":500,"mtime":1608953632386,"results":"17","hashOfConfig":"18"},{"size":605,"mtime":1608665934464,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1608482599008,"results":"20","hashOfConfig":"18"},{"size":1644,"mtime":1608672605777,"results":"21","hashOfConfig":"18"},{"size":662,"mtime":1608655667162,"results":"22","hashOfConfig":"18"},{"size":1036,"mtime":1608859863843,"results":"23","hashOfConfig":"18"},{"size":1710,"mtime":1608932643415,"results":"24","hashOfConfig":"18"},{"size":2108,"mtime":1608934622500,"results":"25","hashOfConfig":"18"},{"size":2118,"mtime":1608931318333,"results":"26","hashOfConfig":"18"},{"size":1639,"mtime":1608858274810,"results":"27","hashOfConfig":"18"},{"size":2346,"mtime":1608859195405,"results":"28","hashOfConfig":"18"},{"size":3685,"mtime":1608979903965,"results":"29","hashOfConfig":"18"},{"size":700,"mtime":1608951638974,"results":"30","hashOfConfig":"18"},{"size":6690,"mtime":1608951424441,"results":"31","hashOfConfig":"18"},{"size":2478,"mtime":1608937887663,"results":"32","hashOfConfig":"18"},{"size":3549,"mtime":1608948096699,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"rnye63",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"/home/reem/Documents/QuizesWebsite/backend/client/src/index.js",[],["76","77"],"/home/reem/Documents/QuizesWebsite/backend/client/src/App.js",[],"/home/reem/Documents/QuizesWebsite/backend/client/src/reportWebVitals.js",[],"/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/index.jsx",[],"/home/reem/Documents/QuizesWebsite/backend/client/src/components/Auth/index.jsx",[],"/home/reem/Documents/QuizesWebsite/backend/client/src/components/User/index.jsx",[],"/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/users.jsx",["78","79","80"],"import { Button, Table } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { AddUser } from './Modals';\nimport axios from 'axios';\nimport './style.css';\n\nfunction Users() {\n  const [visible, setVisible] = useState(false);\n  const [data,setData] = useState([])\n\n  useEffect( async ()=>{\n    await axios.get('/getusers').then(res=>{\n      setData(res.data);\n      console.log(data);\n    })\n  },[]);\n  const onCreate = (values) => {\n    console.log('Received values of form: ', values);\n    axios.post('/adduser',values).then(res =>{\n      setData(prevState =>{\n        return [...prevState, values]\n      })\n    })\n    setVisible(false);\n  };\n\n  const deleteUser = (id) =>{\n    axios.delete('/deleteuser/'+id).then(res =>{\n      setData(data.filter(item=> item._id !== id ))\n      console.log(data);\n    })\n    console.log(id);\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'E-mail',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: 'Password',\n      dataIndex: 'password',\n      key: 'password',\n    },\n    {\n      title: 'Action',\n      dataIndex: '',\n      key: 'x',\n      render: (record) => <a onClick={()=>deleteUser(record._id)} >Delete</a>\n    },\n  ];\n    return (\n      <div className=\"users\">\n        <Table dataSource={data} columns={columns} />\n        <Button type='primary' shape='round' className='addNew' onClick={()=>{setVisible(true)}} > \n          Add New user\n        </Button>\n\n        <AddUser\n        visible={visible}\n        onCreate={onCreate}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n      </div>\n    );\n  }\n  \n  export default Users;\n  ","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/tests.jsx",["81","82","83","84"],"import { Button, Table } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { AddTest } from './Modals';\nimport axios from 'axios';\nimport './style.css';\nimport TestQuestions from './TestQuestions';\n\nfunction Tests() {\n  const [visible, setVisible] = useState(false);\n  const [data,setData] = useState([])\n\n  useEffect( async ()=>{\n    await axios.get('/gettestsusers').then(res=>{\n      setData(res.data);\n      console.log(data);\n    })\n  },[]);\n\n  const onCreate = (values) => {\n    axios.post('/addtest',values).then(res =>{\n      setData(prevState =>{\n        return [...prevState, values]\n      })\n    })\n    console.log('Received values of form: ', values);\n    setVisible(false);\n  };\n  const [view, setView] = useState({ table:true,display:false , test: {}})\n  const deleteTest = (id) =>{\n    axios.delete('/deletetest/'+id).then(res =>{\n      setData(data.filter(item=> item.id !== id ))\n      console.log(data);\n    })\n  }\n  const openTest = (test) =>{\n    setView({\n      table: false,\n      display: true,\n      test: test\n    })\n  }\n  const openTable = () =>{\n    setView({\n      table: true,\n      display: false,\n    })\n  }\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text,record) => (<a  onClick={()=>openTest(record)}> {record.name} </a>)\n    },\n    {\n      title: 'Students',\n      dataIndex: 'students',\n      key: 'students',\n    },\n    {\n      title: 'Action',\n      key: 'operation',\n      render: (record) => (<a onClick={()=>deleteTest(record.id)}>Delete</a>)\n    },\n  ];\n    return (\n      <div className=\"tests\">\n\n        { view.table && <Table dataSource={data} columns={columns} /> }\n        { view.table && <Button type='primary' shape='round' className='addNew' onClick={()=>{setVisible(true)}}> Add New Test </Button> }\n        { view.display && <TestQuestions test={view.test} method={openTable} />}\n        <AddTest\n        visible={visible}\n        onCreate={onCreate}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n      </div>\n    );\n  }\n  \n  export default Tests;\n  ","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/Questions.jsx",["85","86"],"import { Button, List, Radio} from 'antd';\nimport React,{ useEffect, useState } from 'react';\nimport {AddQuestion} from './Modals'\nimport axios from 'axios'\nimport './style.css';\n\nfunction Questions() {\n  const [visible, setVisible] = useState(false);\n  const [data,setData] = useState([])\n\n  useEffect( async ()=>{\n    await axios.get('/getquestions').then(res=>{\n      setData(res.data);\n    })\n  },[]);\n  const deleteQuestion = (id) =>{\n    console.log(data);\n    console.log(id);\n    axios.delete('/deletequestion/'+id).then(res =>{\n      setData(data.filter(item=> item._id !== id ))\n      console.log(data);\n    })\n  }\n  const onCreate = (values) => {\n    console.log('Received values of form: ', values);\n    axios.post('/addquestion',values).then(res =>{\n      setData(prevState =>{\n        return [...prevState, values]\n      })\n    })\n    setVisible(false);\n  };\n\n  return (\n      <div className=\"qustions\">\n        <List\n          itemLayout='horizontal'\n          dataSource={data}\n          renderItem={item => (\n            <List.Item\n              key={item._id}\n              actions={[<a onClick={()=>deleteQuestion(item._id)} key=\"list-loadmore-edit\">Delete</a>]}\n            >\n              <List.Item.Meta\n                title={item.question}\n                description={\n                  <Radio.Group value={item.answer} disabled>\n                    <Radio value={item.choise1}>{item.choise1}</Radio>\n                    <Radio value={item.choise2}>{item.choise2}</Radio>\n                    <Radio value={item.choise3}>{item.choise3}</Radio>\n                    <Radio value={item.choise4}>{item.choise4}</Radio>\n                  </Radio.Group>\n                }\n              />\n            </List.Item>\n          )}\n        />\n        <Button type='primary' shape='round' className='addNew' onClick={()=>{setVisible(true)}}> \n          Add New question \n        </Button>\n\n        <AddQuestion\n        visible={visible}\n        onCreate={onCreate}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n        \n      </div>\n    );\n  }\n  \n  export default Questions;\n  ","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Auth/TeacherLogin.jsx",[],"/home/reem/Documents/QuizesWebsite/backend/client/src/components/Auth/StudentLogin.jsx",[],"/home/reem/Documents/QuizesWebsite/backend/client/src/components/User/NewTest.jsx",["87"],"import { Form, Button, Radio, Divider, Select} from 'antd';\nimport { useEffect, useState } from 'react';\nimport { AnswerModal } from './AnswerModal';\nimport axios from 'axios'\n\nimport './style.css';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\n\nfunction NewTest() {\n\n  const [view, setView] = useState(false);\n  const [start, setStart] = useState(false);\n  const [data, setData] = useState(false);\n  const [answer,setAnswer] = useState({})\n  const [tests,setTests] = useState([])\n  const [testId,setTestId] = useState()\n  useEffect( async()=>{\n    const userId = localStorage.getItem('userId')\n    let prev = []\n    let all =[]\n    await axios.get('/getuserTests/'+userId).then(res=>{\n      prev = res.data\n      console.log(prev);\n    })\n    await axios.get('/gettests').then(res=>{\n      all = res.data\n      setTests(all)\n      if(prev.length !== 0){\n        prev.forEach(item => {\n          all = all.filter(test => test._id !== item.key) \n          console.log(all);\n        })\n        setTests(all)\n      }\n      // console.log(tests);\n    })\n    \n  },[])\n\n  const startTest = async (values) =>{\n    const id = values.testId\n    setTestId(id)\n    await axios.get('/gettestquestion/'+id).then(res=>{\n      setData(res.data);\n      setStart(true)\n    })\n  }\n  const handleSubmit = (values)=>{\n    setAnswer(values)\n    setView(true);\n  }\n  const returnBack = () =>{\n    setView(false);\n    setStart(false)\n  }\n    return (\n      <div className=\"test\">\n        { view &&\n          <div className='back'> \n            <Button type='primary' shape='round' size='small' className='back' onClick={returnBack}>\n            <ArrowLeftOutlined />\n              Back\n            </Button> \n          </div> \n        }\n        { !view &&\n        <Form onFinish={startTest} name='basic' layout='vertical'>\n          <Form.Item\n            name=\"testId\"\n            label=\"Test\"\n            rules={[{ required: true,message: 'Please select the test!',}]}\n          >\n            <Select\n                placeholder=\"Select a test\"\n                allowClear\n            >\n                {tests.map(item =>{\n                  return <Select.Option key={item._id} value={item._id}>{item.name}</Select.Option>\n                })}\n            </Select>\n          </Form.Item>\n          <Form.Item>\n              <Button type='primary' shape='round' htmlType='submit'>\n                  submit\n              </Button>\n          </Form.Item>\n        </Form>\n        }\n        { start && !view &&\n        <Form onFinish={handleSubmit} name=\"basic\">\n\n          {data.map(item =>{\n            return(\n              <> \n                <Form.Item\n                key={item.id}\n                label={item.question}\n                rules={[{ required: true, message: 'Please answer the question!' }]}\n                name={item.id}\n                >\n                  <Radio.Group>\n                    <Radio value={item.choise1}>{item.choise1}</Radio>\n                    <Radio value={item.choise2}>{item.choise2}</Radio>\n                    <Radio value={item.choise3}>{item.choise3}</Radio>\n                    <Radio value={item.choise4}>{item.choise4}</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Divider />\n              </>\n            )\n          })}\n          <Form.Item>\n              <Button type='primary' shape='round' htmlType='submit'>\n                  submit\n              </Button>\n            </Form.Item>\n        </Form>\n        }\n        {view &&\n        <AnswerModal \n            answer={answer}\n            data={data}\n            test = {testId}\n        />     \n      } \n      </div>\n    );\n  }\n  \n  export default NewTest;\n  ","/home/reem/Documents/QuizesWebsite/backend/client/src/components/User/Previous.jsx",["88"],"import { Table } from 'antd';\nimport axios from 'axios'\nimport { useEffect, useState } from 'react';\nimport './style.css';\n\nfunction Previous() {\n  const [data,setData] = useState([])\n\n  useEffect( async()=>{\n    const userId = localStorage.getItem('userId')\n    await axios.get('/getuserTests/'+userId).then(res=>{\n      setData(res.data);\n    })\n  },[])\n\n  \n  const columns = [\n    {\n      title: 'Test',\n      dataIndex: 'test',\n      key: 'test',\n    },\n    {\n      title: 'Grade',\n      dataIndex: 'grade',\n      key: 'grade',\n    },\n  ];\n    return (\n      <div className=\"pervious\">\n        <Table dataSource={data} columns={columns} />\n      </div>\n    );\n  }\n  \n  export default Previous;\n  ","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/Modals.jsx",["89","90","91"],"import { Select, Form, Input } from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport axios from 'axios'\nimport { useEffect, useState } from 'react';\n\nexport const AddQuestion = ({ visible, onCreate, onCancel }) => {\n  const [form] = Form.useForm();\n  const layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 16 },\n  };\n  return (\n    <Modal\n      visible={visible}\n      title=\"Create a new Question\"\n      okText=\"Create\"\n      cancelText=\"Cancel\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            onCreate(values);\n          })\n          .catch((info) => {\n            console.log('Validate Failed:', info);\n          });\n      }}\n    >\n      <Form {...layout} form={form} name=\"form_in_modal\" initialValues={{ modifier: 'public', }} >\n        <Form.Item\n          name=\"question\"\n          label=\"Question\"\n          rules={[{ required: true, message: 'Please enter the question!', }]}\n        >\n          <Input name='question' size='large' placeholder='Enter the question' />\n        </Form.Item>\n\n        <Form.Item\n          name=\"choise1\"\n          label=\"A\"\n          rules={[{ required: true, message: 'Please enter the choise 1!', }]}\n        >\n          <Input name='choise1' size='small' placeholder='Choise 1' />\n        </Form.Item>\n        <Form.Item\n          name=\"choise2\"\n          label=\"B\"\n          rules={[{ required: true, message: 'Please enter the choise 2!', }]}\n        >\n          <Input name='choise2' size='small' placeholder='Choise 2' />\n        </Form.Item>\n        <Form.Item\n          name=\"choise3\"\n          label=\"C\"\n          rules={[{ required: true, message: 'Please enter the choise 3!', }]}\n        >\n          <Input name='choise3' size='small' placeholder='Choise 3' />\n        </Form.Item>\n        <Form.Item\n          name=\"choise4\"\n          label=\"D\"\n          rules={[{ required: true, message: 'Please enter the choise 4!', }]}\n        >\n          <Input name='choise4' size='small' placeholder='Choise 4' />\n        </Form.Item>\n        <Form.Item\n          name=\"answer\"\n          label=\"Answer\"\n          rules={[{ required: true, message: 'Please enter the answer!', }]}\n        >\n          <Input name='answer' size='large' placeholder='Answer' />\n        </Form.Item>\n\n      </Form>\n    </Modal>\n  );\n};\n\nexport const AddTestQuestion = ({ visible, onCreate, onCancel }) => {\n  const [data, setData] = useState([])\n\n  useEffect(async () => {\n    await axios.get('/getquestions').then(res => {\n      setData(res.data);\n    })\n  }, []);\n  const [form] = Form.useForm();\n  const layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 16 },\n  };\n  return (\n    <Modal\n      visible={visible}\n      title=\"Add a new Question\"\n      okText=\"Add\"\n      cancelText=\"Cancel\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            onCreate(values);\n          })\n          .catch((info) => {\n            console.log('Validate Failed:', info);\n          });\n      }}\n    >\n      <Form {...layout} form={form} name=\"form_in_modal\" initialValues={{ modifier: 'public', }} >\n        <Form.Item\n          name=\"questionId\"\n          label=\"Question\"\n          rules={[{ required: true, message: 'Please select the question!', }]}\n        >\n          <Select\n            placeholder=\"Select a question\"\n            allowClear\n          >\n            {data.map(item => {\n              return <Select.Option value={item._id}>{item.question}</Select.Option>\n            })}\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport const AddTest = ({ visible, onCreate, onCancel }) => {\n  const [test, setTest] = useState({ name: '' })\n  const handleChange = (e) => {\n    setTest({\n      name: e.target.value\n    })\n  }\n  const [form] = Form.useForm();\n  const layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 16 },\n  };\n  return (\n    <Modal\n      visible={visible}\n      title=\"Create a new Test\"\n      okText=\"Create\"\n      cancelText=\"Cancel\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            onCreate(values);\n          })\n          .catch((info) => {\n            console.log('Validate Failed:', info);\n          });\n      }}\n    >\n      <Form {...layout} form={form} name=\"form_in_modal\" initialValues={{ modifier: 'public', }} >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[{ required: true, message: 'Please enter the name of teast!', }]}\n        >\n          <Input name='name' onChange={handleChange} size='large' placeholder='Enter the name of teast' />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport const AddUser = ({ visible, onCreate, onCancel }) => {\n  const [data, setData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  })\n  const handleChange = (e) => {\n    setData(prevState => {\n      return { ...prevState, [e.target.name]: e.target.value }\n    })\n  }\n  const [form] = Form.useForm();\n  const layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 16 },\n  };\n  return (\n    <Modal\n      visible={visible}\n      title=\"Create a new User\"\n      okText=\"Create\"\n      cancelText=\"Cancel\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            onCreate(values);\n          })\n          .catch((info) => {\n            console.log('Validate Failed:', info);\n          });\n      }}\n    >\n      <Form {...layout} form={form} name=\"form_in_modal\" initialValues={{ modifier: 'public', }} >\n        <Form.Item\n          name=\"name\"\n          label=\"Name\"\n          rules={[{ required: true, message: 'Please enter the name!', }]}\n        >\n          <Input name='name' onChange={handleChange} size='large' placeholder='Enter the name' />\n        </Form.Item>\n        <Form.Item\n          name=\"email\"\n          label=\"E-mail\"\n          rules={[{ required: true, message: 'Please enter the email!', }]}\n        >\n          <Input name='email' onChange={handleChange} type='email' size='large' placeholder='Enter the email' />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          label=\"Password\"\n          rules={[{ required: true, message: 'Please enter the password!', }]}\n        >\n          <Input name='password' onChange={handleChange} size='large' placeholder='Enter the password' />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n","/home/reem/Documents/QuizesWebsite/backend/client/src/components/Admin/TestQuestions.jsx",["92","93","94"],"import { Breadcrumb, Button, List, Radio} from 'antd';\nimport React,{ useEffect, useState } from 'react';\nimport axios from 'axios'\nimport {AddTestQuestion} from './Modals'\nimport './style.css';\n\nfunction TestQuestions(props) {\n  const [visible, setVisible] = useState(false);\n\n  const [data,setData] = useState([])\n\n  useEffect( async ()=>{\n    const id = props.test.id\n    await axios.get('/gettestquestion/'+id).then(res=>{\n      setData(res.data);\n    })\n  },[]);\n\n  const onCreate = async (values) => {\n    await axios.post('/addtestquestion',{testID:props.test.id, questionId: values.questionId}).then(res =>{\n    })\n    await axios.get('/gettestquestion/'+props.test.id).then(res=>{\n      setData(res.data);\n    })\n    setVisible(false);\n  };\n\n  const deleteQuestion = (id) =>{\n    console.log(data);\n    console.log(id);\n    axios.delete('/deletetestquestion/'+id).then(res =>{\n      setData(data.filter(item=> item.id !== id ))\n      console.log(data);\n    })\n  }\n\n    return (\n      <div className=\"qustions\">\n        <Breadcrumb style={{ margin: '16px 0', textAlign:'left' }}>\n          <Breadcrumb.Item><Button type='link' onClick={()=>props.method()}> Tests </Button></Breadcrumb.Item>\n          <Breadcrumb.Item>{props.test.name}</Breadcrumb.Item>\n        </Breadcrumb>\n        <List\n          itemLayout='horizontal'\n          dataSource={data}\n          renderItem={item => (\n            <List.Item\n            key = {item.id}\n            actions={[<a onClick={()=>deleteQuestion(item.id)} key=\"list-loadmore-edit\">Delete</a>]}\n            >\n              <List.Item.Meta\n                title={item.question}\n                description={\n                  <Radio.Group value={item.answer} disabled>\n                    <Radio value={item.choise1}>{item.choise1}</Radio>\n                    <Radio value={item.choise2}>{item.choise2}</Radio>\n                    <Radio value={item.choise3}>{item.choise3}</Radio>\n                    <Radio value={item.choise4}>{item.choise4}</Radio>\n                  </Radio.Group>\n                }\n              />\n            </List.Item>\n          )}\n        />\n        <Button type='primary' shape='round' className='addNew' onClick={()=>{setVisible(true)}}> \n          Add New question \n        </Button>\n        <AddTestQuestion\n        visible={visible}\n        onCreate={onCreate}\n        onCancel={() => {\n          setVisible(false);\n        }}\n      />\n      </div>\n    );\n  }\n  \n  export default TestQuestions;\n  ","/home/reem/Documents/QuizesWebsite/backend/client/src/components/User/AnswerModal.jsx",["95"],"import { Radio, List } from \"antd\";\nimport {CheckCircleTwoTone} from '@ant-design/icons'\nimport { useEffect } from \"react\";\nimport axios from 'axios'\n\nexport const AnswerModal = ({ answer, data, test }) => {\n  const goodAnswer = data.filter(item => answer[item.id] === item.answer )\n  useEffect(async ()=>{\n    const userId = localStorage.getItem('userId')\n    const values = {\n      userID: userId,\n      testID: test,\n      grade: goodAnswer.length+'/'+data.length\n    }\n    axios.post('/addusertest',values).then(res =>{\n      console.log(res);\n    })\n    axios.get('/finishtest/'+userId+'/'+test)\n  })\n  return (\n    <div className='answerModal'>\n      <div className='grade'>\n          { goodAnswer.length > data.length/2 ?\n              <div className='success'>\n                Grade : {goodAnswer.length} / {data.length}\n              </div>\n            :\n              <div className='fail'>\n                Grade : {goodAnswer.length} / {data.length}\n              </div>\n          }\n      </div>\n      <List\n        itemLayout='horizontal'\n        dataSource={data}\n        renderItem={item =>\n          answer[item.id] === item.answer ?\n          <List.Item key={item.id}>\n            <List.Item.Meta\n              avatar={<CheckCircleTwoTone twoToneColor=\"#52c41a\" />}\n              title={item.question}\n              description={\n                <Radio.Group value={item.answer} className='success'>\n                  <Radio value={item.choise1}>{item.choise1}</Radio>\n                  <Radio value={item.choise2}>{item.choise2}</Radio>\n                  <Radio value={item.choise3}>{item.choise3}</Radio>\n                  <Radio value={item.choise4}>{item.choise4}</Radio>\n                </Radio.Group>\n              }\n            />\n          </List.Item>\n          :\n          <List.Item key={item.id}>\n            <List.Item.Meta\n              avatar={<CheckCircleTwoTone twoToneColor=\"#eb2f96\" />}\n              title={item.question}\n              description={\n                <>\n                { item.choise1 === item.answer ?\n                  <Radio checked className='success'>{item.choise1}</Radio>\n                  :\n                  item.choise1 === answer[item.id] ?\n                  <Radio checked className='fail'>{item.choise1}</Radio>\n                  :\n                  <Radio >{item.choise1}</Radio>\n                }\n                { item.choise2 === item.answer ?\n                  <Radio checked className='success'>{item.choise2}</Radio>\n                  :\n                  item.choise2 === answer[item.id] ?\n                  <Radio checked className='fail'>{item.choise2}</Radio>\n                  :\n                  <Radio >{item.choise2}</Radio>\n                }\n                { item.choise3 === item.answer ?\n                  <Radio checked className='success'>{item.choise3}</Radio>\n                  :\n                  item.choise3 === answer[item.id] ?\n                  <Radio checked className='fail'>{item.choise3}</Radio>\n                  :\n                  <Radio >{item.choise3}</Radio>\n                }\n                { item.choise4 === item.answer ?\n                  <Radio checked className='success'>{item.choise4}</Radio>\n                  :\n                  item.choise4 === answer[item.id] ?\n                  <Radio checked className='fail'>{item.choise4}</Radio>\n                  :\n                  <Radio >{item.choise4}</Radio>\n                }\n                </>\n              }\n            />\n          </List.Item>\n        }\n      />\n    </div>\n  );\n};\n",["96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":11,"column":14,"nodeType":"104","endLine":16,"endColumn":4},{"ruleId":"102","severity":1,"message":"105","line":16,"column":5,"nodeType":"106","endLine":16,"endColumn":7,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":55,"column":27,"nodeType":"110","endLine":55,"endColumn":68},{"ruleId":"102","severity":1,"message":"103","line":12,"column":14,"nodeType":"104","endLine":17,"endColumn":4},{"ruleId":"102","severity":1,"message":"105","line":17,"column":5,"nodeType":"106","endLine":17,"endColumn":7,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"109","line":53,"column":33,"nodeType":"110","endLine":53,"endColumn":68},{"ruleId":"108","severity":1,"message":"109","line":63,"column":28,"nodeType":"110","endLine":63,"endColumn":67},{"ruleId":"102","severity":1,"message":"103","line":11,"column":14,"nodeType":"104","endLine":15,"endColumn":4},{"ruleId":"108","severity":1,"message":"109","line":42,"column":25,"nodeType":"110","endLine":42,"endColumn":92},{"ruleId":"102","severity":1,"message":"103","line":17,"column":14,"nodeType":"104","endLine":38,"endColumn":4},{"ruleId":"102","severity":1,"message":"103","line":9,"column":14,"nodeType":"104","endLine":14,"endColumn":4},{"ruleId":"102","severity":1,"message":"103","line":84,"column":13,"nodeType":"104","endLine":88,"endColumn":4},{"ruleId":"112","severity":1,"message":"113","line":134,"column":10,"nodeType":"114","messageId":"115","endLine":134,"endColumn":14},{"ruleId":"112","severity":1,"message":"116","line":178,"column":10,"nodeType":"114","messageId":"115","endLine":178,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":12,"column":14,"nodeType":"104","endLine":17,"endColumn":4},{"ruleId":"102","severity":1,"message":"117","line":17,"column":5,"nodeType":"106","endLine":17,"endColumn":7,"suggestions":"118"},{"ruleId":"108","severity":1,"message":"109","line":49,"column":23,"nodeType":"110","endLine":49,"endColumn":89},{"ruleId":"102","severity":1,"message":"103","line":8,"column":13,"nodeType":"104","endLine":19,"endColumn":4},{"ruleId":"98","replacedBy":"119"},{"ruleId":"100","replacedBy":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["123"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["124"],"no-unused-vars","'test' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.test.id'. Either include it or remove the dependency array.",["125"],["121"],["122"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"126","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [data]",{"range":"131","text":"132"},{"range":"133","text":"132"},"Update the dependencies array to be: [props.test.id]",{"range":"134","text":"135"},[407,409],"[data]",[457,459],[463,465],"[props.test.id]"]